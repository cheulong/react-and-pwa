{"ast":null,"code":"import _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"d:\\\\web\\\\study\\\\react-and-pwa\\\\nextjs\\\\pages\\\\about-page.js\";\nimport withRedux from \"next-redux-wrapper\";\nimport makeStore from './make-store';\nimport React, { Component } from \"react\";\n\nvar AboutPage = function AboutPage(_ref) {\n  var foo = _ref.foo,\n      custom = _ref.custom;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Prop from Redux \", foo), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Prop from getInitialProps \", custom));\n};\n\nAboutPage.getInitialProps = function (_ref2) {\n  var store = _ref2.store,\n      isServer = _ref2.isServer,\n      pathname = _ref2.pathname,\n      query = _ref2.query;\n  // component will read from store's state when rendered\n  store.dispatch({\n    type: 'FOO',\n    payload: 'foo'\n  }); // pass some custom props to component from here\n\n  return {\n    custom: 'custom'\n  };\n};\n\nAboutPage = (_readOnlyError(\"AboutPage\"), withRedux(makeStore, function (state) {\n  return {\n    foo: state.foo\n  };\n})(Page));\nexport default AboutPage;","map":{"version":3,"sources":["d:\\web\\study\\react-and-pwa\\nextjs\\pages\\about-page.js"],"names":["withRedux","makeStore","React","Component","AboutPage","foo","custom","getInitialProps","store","isServer","pathname","query","dispatch","type","payload","state","Page"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,IAAMC,SAAS,GAAG;AAAA,MAAEC,GAAF,QAAEA,GAAF;AAAA,MAAOC,MAAP,QAAOA,MAAP;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsBD,GAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAgCC,MAAhC,CAFF,CADgB;AAAA,CAAlB;;AAOAF,SAAS,CAACG,eAAV,GAA4B,iBAAwC;AAAA,MAAtCC,KAAsC,SAAtCA,KAAsC;AAAA,MAA/BC,QAA+B,SAA/BA,QAA+B;AAAA,MAArBC,QAAqB,SAArBA,QAAqB;AAAA,MAAXC,KAAW,SAAXA,KAAW;AAClE;AACAH,EAAAA,KAAK,CAACI,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAf,EAFkE,CAGlE;;AACA,SAAO;AAACR,IAAAA,MAAM,EAAE;AAAT,GAAP;AACD,CALD;;AAOAF,SAAS,iCAAGJ,SAAS,CAACC,SAAD,EAAY,UAACc,KAAD;AAAA,SAAY;AAACV,IAAAA,GAAG,EAAEU,KAAK,CAACV;AAAZ,GAAZ;AAAA,CAAZ,CAAT,CAAoDW,IAApD,CAAH,CAAT;AAEA,eAAeZ,SAAf","sourcesContent":["import withRedux from \"next-redux-wrapper\";\r\nimport makeStore from './make-store';\r\nimport React, {Component} from \"react\";\r\n\r\nconst AboutPage = ({foo, custom}) => (\r\n  <div>\r\n    <div>Prop from Redux {foo}</div>\r\n    <div>Prop from getInitialProps {custom}</div>\r\n  </div>\r\n);\r\n\r\nAboutPage.getInitialProps = ({store, isServer, pathname, query}) => {\r\n  // component will read from store's state when rendered\r\n  store.dispatch({type: 'FOO', payload: 'foo'});\r\n  // pass some custom props to component from here\r\n  return {custom: 'custom'}; \r\n};\r\n\r\nAboutPage = withRedux(makeStore, (state) => ({foo: state.foo}))(Page);\r\n\r\nexport default AboutPage;\r\n"]},"metadata":{},"sourceType":"module"}