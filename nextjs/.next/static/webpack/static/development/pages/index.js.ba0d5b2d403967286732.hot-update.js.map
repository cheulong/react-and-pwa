{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ba0d5b2d403967286732.hot-update.js","sources":["webpack:///./store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  articles : [\n    {\n      \"id\":\"1\",\n      \"title\":\"<h2>1Duo Reges: constuctio interrete.</h2>\",\n      \"content\":\"<p>is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen</p>\"\n    },\n    {\n      \"id\":\"2\",\n      \"title\":\"<h2>2Duo Reges: constuctio interrete.</h2>\",\n      \"content\":\"<p>is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen</p>\"\n    },\n    {\n      \"id\":\"3\",\n      \"title\":\"<h2>3Duo Reges: constuctio interrete.</h2>\",\n      \"content\":\"<p>is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen</p>\"\n    },\n    {\n      \"id\":\"4\",\n      \"title\":\"<h2>4Duo Reges: constuctio interrete.</h2>\",\n      \"content\":\"<p>is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen</p>\"\n    }\n  ]\n}\n\nexport const actionTypes = {\n  ADD: 'ADD',\n  TICK: 'TICK',\n  SHOW_ARTICLES: 'SHOW_ARTICLES',\n  REMOVE_ARTICLE: 'REMOVE_ARTICLE'\n\n}\n\n// REDUCERS\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      })\n    case actionTypes.ADD:\n      return Object.assign({}, state, {\n        count: state.count + 1\n      })\n    case actionTypes.SHOW_ARTICLES:\n      return state.articleList;\n\n    // case actionTypes.REMOVE_ARTICLE:\n    //   const articles = Object.assign([], state);      \n    //   articles.splice(action.id, 1);\n    //   console.log(articles);\n      \n      return state=articleList;\n    default:\n      return state\n  }\n}\n\n// ACTIONS\nexport const serverRenderClock = isServer => dispatch => {\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() })\n}\n\nexport const startClock = () => dispatch => {\n  return setInterval(\n    () => dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() }),\n    1000\n  )\n}\n\nexport const addCount = () => dispatch => {\n  return dispatch({ type: actionTypes.ADD })\n}\n\nexport const showArticles = () => dispatch => {\n  return dispatch({ type: actionTypes.SHOW_ARTICLES })\n}\n\n// export const removeArticle = (id) => dispatch => {\n//   return dispatch({ type: actionTypes.REMOVE_ARTICLE, id})\n// }\n\nexport const initStore = (initialState = exampleInitialState) => {\n  return createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AApBA;AA4BA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AApBA;AAsBA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AALA;AAOA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}